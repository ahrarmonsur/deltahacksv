{"version":3,"sources":["assets/illustration-1.png","assets/illustration-2.png","assets/illustration-3.png","logo.svg","components/Header/Header.js","components/RoleSelection/RoleSelection.js","components/Navigation/BackButton/BackButton.js","components/UserVerification/UserVerification.js","components/Login/Login.js","func.js","api/api.js","components/Form/Form.js","components/Profile/Profile.js","components/PatientData/PatientData.js","components/QRDisplay/QRDisplay.js","components/QRScan/QRScan.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","this","props","title","Component","RoleSelection","Button_default","color","variant","size","href","BackButton","onClick","ArrowBack_default","UserVerification","state","name","email","handleNameChange","e","_this","setState","target","value","handleEmailChange","Navigation_BackButton_BackButton","TextField_default","id","label","onChange","margin","fullWidth","Login","src","loginImg","alt","clean","obj","propName","undefined","getPatient","patientID","cb","axios","get","concat","then","res","Form","prevStep","step","data","gender","dob","phone_1","phone_2","phone_3","card_num","province","address","postal","city","medications","medication","serious_illness","phone_numbers","handleChangeSelect","event","console","log","prevState","Object","objectSpread","defineProperty","handleChangeInput","handleNextStep","handlePreviousStep","handleAddPhone","handleAddMedication","handleRemoveMedication","rm_medication","filteredMeds","filter","handleSeriousDecision","val","patientData","post","gotoStep","createPhoneInputs","inputs","i","push","key","index_es","type","InputLabelProps","shrink","placeholder","_this2","formImg","Fragment","htmlFor","input","displayEmpty","formImg2","gutterBottom","style","justifyContent","dense","map","primary","top","aria-label","Delete_default","Profile","patient","match","params","first_name","_id","formID","form","last_name","length","med","QRCode","require","QRDisplay","image","createQRCode","toDataURL","scale","err","bind","assertThisInitialized","QRScanner","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","delay","handleScan","history","error","lib_default","onError","handleError","onScan","width","resolution","facingMode","App","BrowserRouter","components_Header_Header","Route","path","exact","component","QRScan","PatientData","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.258355e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/illustration-1.07906850.png\";","module.exports = __webpack_public_path__ + \"static/media/illustration-2.5cd9911e.png\";","module.exports = __webpack_public_path__ + \"static/media/illustration-3.ff3cfd1f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './Header.sass'\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"clipboard\">\n\t\t\t\t\t<h1>{this.props.title}</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./RoleSelection.sass\";\n\nclass RoleSelection extends Component {\n    render() {\n        return (\n            <div className=\"roleSelection\">\n                <h2>Welcome to MediForm</h2>\n                <div className=\"buttons\">\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        href=\"/login\"\n                    >\n                        Patient Portal\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        href=\"/qrscan\"\n                    >\n                        Clinician Portal\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RoleSelection;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport \"./BackButton.sass\";\n\nclass BackButton extends Component {\n    render() {\n        return (\n            <div className=\"back\">\n                <Button href={this.props.href} onClick={this.props.onClick}>\n                    <ArrowBackIcon />\n                    Back\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default BackButton;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport BackButton from \"../Navigation/BackButton/BackButton\";\nimport \"./UserVerification.sass\";\n\nclass UserVerification extends Component {\n\tstate = {\n\t\tname: \"Jimothy Doe\",\n\t\temail: \"jimothydoe@gmail.com\"\n\t}\n\n\thandleNameChange = (e) => this.setState({name: e.target.value})\n\thandleEmailChange = (e) => this.setState({email: e.target.value})\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"userVerification\">\n\t\t\t\t<BackButton href=\"/login\"/>\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tConfirm your information.\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputFields\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tonChange={this.handleEmailChange}\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"buttons footerButtons\">\n\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" size=\"large\" href=\"/form\">Confirm</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserVerification;\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport './Login.sass';\nimport loginImg from '../../assets/illustration-1.png';\n\nclass Login extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"login\">\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<img src={loginImg} alt=\"Image of woman holding Mediform app\"/>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tClinic visits made easy.\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSkip the form at the doctor’s office, and scan your QR code in seconds.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"buttons footerButtons\">\n\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" size=\"large\" href=\"/userVerification\"> Sign up with Google</Button>\n\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" size=\"large\" href=\"/userVerification\"> Sign up with Email</Button>\n\t\t\t\t\t<p>or log in</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Login;\n","function clean(obj) {\n    for (var propName in obj) {\n        if (\n            obj[propName] === null ||\n            obj[propName] === undefined ||\n            obj[propName] === \"\"\n        ) {\n            delete obj[propName];\n        }\n    }\n}\n\nexport default clean;\n","import axios from \"axios\";\nimport clean from \"../func\";\n\nfunction createPatient(patientBasicInfo) {\n    axios\n        .post(\"/api/patients\", patientBasicInfo)\n        .then(res =>\n            console.log(`${patientBasicInfo[\"first_name\"]} added to db.`)\n        );\n}\n\nfunction getPatient(patientID, cb) {\n    axios.get(`/api/patients/${patientID}`).then(res => cb(res));\n}\n\nfunction getForm(formID, cb) {\n    axios.get(`/api/form/${formID}`).then(res => cb(res));\n}\n\nfunction submitPatientForm(patientID, patientData) {\n    clean(patientData);\n    axios\n        .post(`/api/patients/${patientID}/form`, patientData)\n        .then(res => console.log(\"ResAction called\"));\n}\n\nfunction addPatientToClinic(clinicID, patientID) {\n    axios\n        .post(`/api/clinic/${clinicID}/patient/${patientID}`)\n        .then(res => console.log(`${patientID} added to ${clinicID}`));\n}\n\nexport {\n    createPatient,\n    submitPatientForm,\n    addPatientToClinic,\n    getPatient,\n    getForm\n};\n","import React, { Component } from \"react\";\nimport {\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Input,\n    TextField,\n    Button,\n    Typography,\n    List,\n    ListItem,\n    ListItemText,\n    IconButton,\n    ListItemSecondaryAction,\n    dense\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport formImg from '../../assets/illustration-2.png';\nimport formImg2 from '../../assets/illustration-3.png';\n\nimport \"./Form.sass\";\nimport BackButton from \"../Navigation/BackButton/BackButton\";\n\nimport { submitPatientForm } from \"../../api/api\";\n\nexport default class Form extends Component {\n    state = {\n        prevStep: 1,\n        step: 1,\n        data: {\n            gender: \"\",\n            dob: \"\",\n            phone_1: \"\",\n            phone_2: \"\",\n            phone_3: \"\",\n            card_num: \"\",\n            province: \"on\",\n            address: \"\",\n            postal: \"\",\n            city: \"\",\n            medications: [],\n            medication: \"\",\n            serious_illness: undefined\n        },\n        phone_numbers: 1\n    };\n\n    handleChangeSelect = event => {\n        console.log(event.target.value);\n        this.setState(prevState => ({\n            data: {\n                ...prevState.data,\n                [event.target.name]: event.target.value\n            }\n        }));\n    };\n\n    handleChangeInput = name => event => {\n        let value = event.target.value;\n        this.setState(prevState => ({\n            data: {\n                ...prevState.data,\n                [name]: value\n            }\n        }));\n    };\n\n    handleNextStep = () => {\n        this.setState(prevState => ({\n            prevStep: prevState.step,\n            step: prevState.step + 1\n        }));\n    };\n\n    handlePreviousStep = () => {\n        this.setState(prevState => ({\n            step: prevState.step - 1,\n            prevStep: prevState.step\n        }));\n\t    console.log(this.state);\n    };\n\n    handleAddPhone = () => {\n        this.setState(prevState => {\n            if (prevState.phone_numbers < 3) {\n                return {\n                    phone_numbers: prevState.phone_numbers + 1\n                };\n            }\n        });\n    };\n\n    handleAddMedication = () => {\n        this.setState(prevState => {\n            if (prevState.data.medication !== \"\") {\n                return {\n                    data: {\n                        ...prevState.data,\n                        medications: prevState.data.medications.concat([\n                            prevState.data.medication\n                        ]),\n                        medication: \"\"\n                    }\n                };\n            } else {\n                return;\n            }\n        });\n    };\n\n    handleRemoveMedication = rm_medication => {\n        this.setState(prevState => {\n            let filteredMeds = prevState.data.medications.filter(\n                medication => medication !== rm_medication\n            );\n            return {\n                data: {\n                    ...prevState.data,\n                    medications: filteredMeds\n                }\n            };\n        });\n    };\n\n    handleSeriousDecision = val => {\n        this.setState(prevState => ({\n            data: {\n                ...prevState.data,\n                serious_illness: val\n            }\n        }));\n        this.handleNextStep();\n        submitPatientForm(\"5c4ccb40d0dc8f0317d60eb0\", this.state.data);\n    };\n\n    gotoStep = step => {\n        console.log(step);\n        this.setState(prevState => ({\n            prevStep: prevState.step,\n            step: step\n        }));\n    };\n\n    createPhoneInputs = () => {\n        let prevState = this.state;\n        let inputs = [];\n        for (let i = 1; i < prevState.phone_numbers + 1; i++) {\n            inputs.push(\n                <div key={i}>\n                    <TextField\n                        fullWidth={true}\n                        id=\"standard-number\"\n                        label={`Phone Number ${i}`}\n                        value={this.state.data[`phone_${i}`]}\n                        onChange={this.handleChangeInput(`phone_${i}`)}\n                        type=\"tel\"\n                        name={`phone_${i}`}\n                        InputLabelProps={{\n                            shrink: true\n                        }}\n                        placeholder=\"eg. 4162223333\"\n                        margin=\"normal\"\n                    />\n                </div>\n            );\n        }\n        return inputs;\n    };\n\n    render() {\n        return (\n            <div className=\"form\">\n                {this.state.step === 1 && (\n                    <BackButton href=\"/userVerification\" />\n                )}\n                {this.state.step !== 1 && (\n                    <BackButton onClick={this.handlePreviousStep} />\n                )}\n\n                {/* *** STEP 1 *** */}\n                {this.state.step == 1 && (\n\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t<img src={formImg} alt=\"Image of health passport\"/>\n\t\t\t\t\t\t<Typography variant=\"subheading\">\n\t\t\t\t\t\t\tSTEP 1\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<h2>Let's get your health passport set up.</h2>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tFill out your information once, and you'll only have\n\t\t\t\t\t\t\tto scan your QR code the next time you visit the\n\t\t\t\t\t\t\tdoctor!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>We'll start with information about you.</p>\n\t\t\t\t\t</div>\n                )}\n\n                {/* *** STEP 2 *** */}\n                {this.state.step == 2 && (\n                    <>\n                        <div className=\"info\">\n                            <h1>What's your gender and date of birth?\n                            </h1>\n                        </div>\n                        <form id=\"form_1\">\n                            <div className=\"formRow\">\n                                <FormControl\n                                    className=\"formControl\"\n                                    fullWidth={true}\n                                >\n                                    <InputLabel\n                                        shrink\n                                        htmlFor=\"age-label-placeholder\"\n                                    >\n                                        Gender\n                                    </InputLabel>\n                                    <Select\n                                        value={this.state.data.gender}\n                                        onChange={this.handleChangeSelect}\n                                        input={\n                                            <Input\n                                                name=\"gender\"\n                                                id=\"age-label-placeholder\"\n                                            />\n                                        }\n                                        displayEmpty\n                                        name=\"gender\"\n                                    >\n                                        <MenuItem value=\"\">Choose one...</MenuItem>\n                                        <MenuItem value={\"male\"}>Male</MenuItem>\n                                        <MenuItem value={\"female\"}>Female</MenuItem>\n                                        <MenuItem value={\"other\"}>Other</MenuItem>\n                                    </Select>\n                                    {/* <FormHelperText>Label + placeholder</FormHelperText> */}\n                                </FormControl>\n                            </div>\n                            <div className=\"formRow\">\n                                <TextField\n                                    id=\"date\"\n                                    label=\"Date of Birth\"\n                                    type=\"date\"\n                                    // defaultValue=\"\"\n                                    className=\"formEl\"\n                                    name=\"dob\"\n                                    value={this.state.data.dob}\n                                    fullWidth={true}\n                                    onChange={this.handleChangeInput(\"dob\")}\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                />\n                            </div>\n                        </form>\n                    </>\n                )}\n\n                {/* *** STEP 3 *** */}\n                {this.state.step == 3 && (\n                    <>\n                        <div className=\"info\">\n                            <h1>What's your primary phone number?</h1>\n                        </div>\n                        <form id=\"form_2\">\n                            {this.createPhoneInputs()}\n                            {this.state.phone_numbers < 3 && (\n                                <Button\n                                    color=\"default\"\n                                    onClick={this.handleAddPhone}\n                                >\n\t\t\t\t\t\t\t\t\t+ Add Another\n                                </Button>\n                            )}\n                        </form>\n                    </>\n                )}\n\n                {/* *** STEP 4 *** */}\n                {this.state.step == 4 && (\n                    <>\n                        <div className=\"info\">\n                            <h1>What is your health card number?</h1>\n                        </div>\n                        <form id=\"form_2\">\n                            <div>\n                                <TextField\n                                    fullWidth={true}\n                                    id=\"standard-number\"\n                                    label=\"Health Card Number\"\n                                    value={this.state.data.card_num}\n                                    onChange={this.handleChangeInput(\n                                        \"card_num\"\n                                    )}\n                                    type=\"text\"\n                                    name={`card_num`}\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                    placeholder=\"eg. 1234-567-890-XX\"\n                                    margin=\"normal\"\n                                />\n                            </div>\n                            {/* <Button color=\"default\">Need help?</Button> */}\n                        </form>\n                    </>\n                )}\n\n                {/* *** STEP 5 *** */}\n                {this.state.step == 5 && (\n                    <>\n                        <div className=\"info\">\n                            <h1>Please enter your address.</h1>\n                        </div>\n                        <form id=\"form_2\">\n                            <div>\n                                <TextField\n                                    fullWidth={true}\n                                    id=\"address\"\n                                    label=\"Street\"\n                                    value={this.state.data.address}\n                                    onChange={this.handleChangeInput(\"address\")}\n                                    type=\"text\"\n                                    name={`address`}\n                                    margin=\"normal\"\n                                />\n                                <TextField\n                                    fullWidth={true}\n                                    id=\"city\"\n                                    label=\"City\"\n                                    value={this.state.data.city}\n                                    onChange={this.handleChangeInput(\"city\")}\n                                    type=\"text\"\n                                    name={`city`}\n                                    margin=\"normal\"\n                                />\n\n                                <div className=\"two-col-input\">\n                                    <FormControl\n                                        className=\"formControl\"\n                                        fullWidth={true}\n                                    >\n                                        <InputLabel\n                                            shrink\n                                            htmlFor=\"age-label-placeholder\"\n                                        >\n                                            Province\n                                        </InputLabel>\n                                        <Select\n                                            value={this.state.data.province}\n                                            onChange={this.handleChangeSelect}\n                                            input={\n                                                <Input\n                                                    name=\"province\"\n                                                    id=\"age-label-placeholder\"\n                                                />\n                                            }\n                                            displayEmpty\n                                            name=\"province\"\n                                        >\n                                            <MenuItem value={\"ab\"}>\n                                                Alberta\n                                            </MenuItem>\n                                            <MenuItem value={\"bc\"}>\n                                                British Columbia\n                                            </MenuItem>\n                                            <MenuItem value={\"mb\"}>\n                                                Manitoba\n                                            </MenuItem>\n                                            <MenuItem value={\"nb\"}>\n                                                New Brunswick\n                                            </MenuItem>\n                                            <MenuItem value={\"nl\"}>\n                                                Newfoundland and Labrador\n                                            </MenuItem>\n                                            <MenuItem value={\"nt\"}>\n                                                Northwest Territories\n                                            </MenuItem>\n                                            <MenuItem value={\"ns\"}>\n                                                Nova Scotia\n                                            </MenuItem>\n                                            <MenuItem value={\"nu\"}>\n                                                Nunavut\n                                            </MenuItem>\n                                            <MenuItem value={\"on\"}>\n                                                Ontario\n                                            </MenuItem>\n                                            <MenuItem value={\"pe\"}>\n                                                Prince Edward Island\n                                            </MenuItem>\n                                            <MenuItem value={\"sk\"}>\n                                                Saskatchewan\n                                            </MenuItem>\n                                            <MenuItem value={\"yt\"}>\n                                                Yukon\n                                            </MenuItem>\n                                        </Select>\n                                        {/* <FormHelperText>Label + placeholder</FormHelperText> */}\n                                    </FormControl>\n                                    <TextField\n                                        fullWidth={true}\n                                        id=\"postal\"\n                                        label=\"Postal Code\"\n                                        value={this.state.data.postal}\n                                        onChange={this.handleChangeInput(\n                                            \"postal\"\n                                        )}\n                                        type=\"text\"\n                                        name={`postal`}\n                                        margin=\"normal\"\n                                    />\n                                </div>\n                            </div>\n                        </form>\n                    </>\n                )}\n\n                {/* *** STEP 6 *** */}\n                {this.state.step == 6 && (\n\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t<img src={formImg2} alt=\"Image of prescriptions\"/>\n\t\t\t\t\t\t<Typography variant=\"subheading\" gutterBottom>\n\t\t\t\t\t\t\tSTEP 2\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<h2>Your medical information</h2>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tDoctors need background information in order to make\n\t\t\t\t\t\t\tinformed medical decisions for you.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tHere are a few questions about you and your medical\n\t\t\t\t\t\t\thistory.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n                )}\n\n                {/* *** STEP 7 *** */}\n                {this.state.step == 7 && (\n                    <>\n                        <div\n                            className=\"info\"\n                            style={{ justifyContent: \"center\" }}\n                        >\n                            <h2>Are you currently taking any prescription medication?</h2>\n                        </div>\n\t                    <div className=\"buttons footerButtons\">\n\t\t                    <Button\n\t\t\t                    color=\"primary\"\n\t\t\t                    variant=\"contained\"\n\t\t\t                    size=\"large\"\n\t\t\t                    onClick={() => this.gotoStep(8)}\n\t\t                    >\n\t\t\t                    Yes\n\t\t                    </Button>\n\t\t                    <Button\n\t\t\t                    color=\"primary\"\n\t\t\t                    variant=\"contained\"\n\t\t\t                    size=\"large\"\n\t\t\t                    onClick={() => this.gotoStep(9)}\n\t\t                    >\n\t\t\t                    No\n\t\t                    </Button>\n                        </div>\n                    </>\n                )}\n\n                {/* *** STEP 8 ***\n                  YES TO MEDICATION */}\n                {this.state.step == 8 && (\n                    <>\n                        <div className=\"info\">\n                            <h2>\n                                Which medication(s) are you taking right now?\n                            </h2>\n                        </div>\n                        <form id=\"form_2\">\n                            {this.state.data.medications !== [] && (\n                                <List dense={false}>\n                                    {this.state.data.medications.map(\n                                        medication => {\n                                            return (\n                                                <ListItem key={medication}>\n                                                    <ListItemText\n                                                        primary={medication}\n                                                    />\n                                                    <ListItemSecondaryAction\n                                                        style={{ top: \"25%\" }}\n                                                    >\n                                                        <IconButton\n                                                            aria-label=\"Delete\"\n                                                            onClick={() =>\n                                                                this.handleRemoveMedication(\n                                                                    medication\n                                                                )\n                                                            }\n                                                        >\n                                                            <DeleteIcon />\n                                                        </IconButton>\n                                                    </ListItemSecondaryAction>\n                                                </ListItem>\n                                            );\n                                        }\n                                    )}\n                                </List>\n                            )}\n                            <TextField\n                                fullWidth={true}\n                                id=\"medication\"\n                                label={\n                                    this.state.data.medications != []\n                                        ? \"Prescription Medication\"\n                                        : null\n                                }\n                                value={this.state.data.medication}\n                                onChange={this.handleChangeInput(\"medication\")}\n                                type=\"text\"\n                                name={`medication`}\n                                // className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                                placeholder=\"eg. Advil, 25mg, twice daily\"\n                                margin=\"normal\"\n                            />\n                            <Button\n                                color=\"default\"\n                                onClick={this.handleAddMedication}\n                            >\n                                + Add Another\n                            </Button>\n                        </form>\n                    </>\n                )}\n\n                {/* *** STEP 9 *** */}\n                {this.state.step == 9 && (\n                    <>\n                        <div\n                            className=\"info\"\n                            style={{ justifyContent: \"center\" }}\n                        >\n                            <h2>Do you have a history of serious illnesses?</h2>\n                            <p>\n                                For instance, heart disease, diabetes, HIV/AIDS,\n                                etc.\n                            </p>\n                        </div>\n\t                    <div className=\"buttons footerButtons\">\n\t\t                    <Button\n\t\t\t                    color=\"primary\"\n\t\t\t                    variant=\"contained\"\n\t\t\t                    size=\"large\"\n\t\t\t                    onClick={() => this.handleSeriousDecision(true)}\n\t\t                    >\n\t\t\t                    Yes\n\t\t                    </Button>\n\t\t                    <Button\n\t\t\t                    color=\"primary\"\n\t\t\t                    variant=\"contained\"\n\t\t\t                    size=\"large\"\n\t\t\t                    onClick={() => this.handleSeriousDecision(false)}\n\t\t                    >\n\t\t\t                    No\n\t\t                    </Button>\n                        </div>\n                    </>\n                )}\n\n                {/* *** STEP 10 *** */}\n                {this.state.step == 10 && (\n\t\t\t\t\t<div className=\"info\"\n\t\t\t\t\t     style={{ justifyContent: \"center\" }}\n                    >\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tYour health passport is complete!\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThank you for filling out all of the entries. You\n\t\t\t\t\t\t\tare now ready to check into clinics with a quick\n\t\t\t\t\t\t\tscan!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n                )}\n\n                <div className=\"buttons footerButtons\">\n\t                {this.state.step !== 7 &&\n\t                this.state.step !== 9 &&\n\t                this.state.step !== 10 && (\n\t\t                <Button\n\t\t\t                color=\"primary\"\n\t\t\t                variant=\"contained\"\n\t\t\t                size=\"large\"\n\t\t\t                onClick={this.handleNextStep}\n\t\t                >\n\t\t\t                {this.state.step == 1 || this.state.step == 6\n\t\t\t\t                ? \"Continue\"\n\t\t\t\t                : \"Next\"}\n\t\t                </Button>\n\t                )}\n\t                {this.state.step === 10 && (\n\t\t                <Button\n\t\t\t                color=\"primary\"\n\t\t\t                variant=\"contained\"\n\t\t\t                size=\"large\"\n                            // onClick={this.handleNextStep}\n\t\t                >\n\t\t\t                View my profile\n\t\t                </Button>\n\t                )}\n\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { getPatient } from \"../../api/api\";\nimport \"./Profile.sass\";\nimport { Button, Typography } from \"@material-ui/core\";\n\nexport default class Profile extends Component {\n    state = {\n        patient: {}\n    };\n\n    componentDidMount() {\n        console.log(\"Mounted\");\n        getPatient(\n            this.props.match.params.patientID || \"5c4ccb40d0dc8f0317d60eb0\",\n            patient => {\n                this.setState({ patient: patient.data });\n            }\n        );\n    }\n\n    render() {\n        let patient = this.state.patient;\n        console.log(this.state.patient);\n        return (\n            <div className=\"profile\">\n                <h1>Hi, {patient.first_name}</h1>\n                <Button\n                    href={`/qrdisplay/${patient._id}`}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"banner-btn\"\n                >\n                    <Typography variant=\"overline\" gutterBottom>\n                        My passport\n                    </Typography>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Check-in with QR code\n                    </Typography>\n                </Button>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { getPatient, getForm } from \"../../api/api\";\nimport \"./PatientData.sass\";\nimport { Button, Typography } from \"@material-ui/core\";\n\nexport default class Profile extends Component {\n    state = {\n        patient: {}\n    };\n\n    componentDidMount() {\n        console.log(\"Mounted\");\n        getPatient(\n            this.props.match.params.patientID || \"5c4ccb40d0dc8f0317d60eb0\",\n            patient => {\n                this.setState({ patient: patient.data });\n                getForm(patient.data.form, form => {\n                    this.setState(prevState => ({\n                        patient: {\n                            ...prevState.patient,\n                            form: form.data\n                        }\n                    }));\n                });\n            }\n        );\n    }\n\n    render() {\n        let patient = this.state.patient;\n        console.log(this.state.patient);\n\n        return (\n            <div className=\"patientData\">\n                {this.state.patient.form !== undefined && (\n                    <>\n                        <h1>\n                            {patient.first_name} {patient.last_name}\n                        </h1>\n                        <p>{patient.form.gender}</p>\n                        <p>{patient.dob}</p>\n                        <p>{patient.form.card_num}</p>\n                        <p>{patient.form.address}</p>\n                        <p>{patient.form.postal}</p>\n                        <p>{patient.form.city}</p>\n                        <p>{patient.form.province}</p>\n                        <p>{patient.form.phone_1}</p>\n                        <p>{patient.form.phone_2}</p>\n                        <p>{patient.form.phone_3}</p>\n                        <p>\n                            Patient{\" \"}\n                            {patient.form.serious_illness\n                                ? \"has\"\n                                : \"does not have\"}{\" \"}\n                            a serious illness\n                        </p>\n                        <h2>Medications</h2>\n                        {patient.form.medications &&\n                        patient.form.medications.length > 0 ? (\n                            patient.form.medications.map(med => {\n                                return <p>{med}</p>;\n                            })\n                        ) : (\n                            <p>None</p>\n                        )}\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./QRDisplay.sass\";\nimport { Card, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nvar QRCode = require(\"qrcode\");\n\nexport default class QRDisplay extends Component {\n    state = {\n        image: \"\"\n    };\n\n    createQRCode = patientID => {\n        console.log({ patientID });\n        QRCode.toDataURL(\n            patientID,\n            { scale: 32 },\n            function(err, image) {\n                console.log(image);\n                this.setState({\n                    image: image\n                });\n            }.bind(this)\n        );\n    };\n\n    componentDidMount() {\n        this.createQRCode(this.props.match.params.patientID);\n    }\n\n    render() {\n        return (\n            <div className=\"qrdisplay\">\n                <h1>Check-in</h1>\n                {this.state.image != \"\" && (\n                    <Card className=\"qrcard\">\n                        <img src={this.state.image} />\n                    </Card>\n                )}\n                <footer>\n                    <Button\n                        href={`/profile/${this.props.match.params.patientID}`}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        // onClick={this.handleNextStep}\n                    >\n                        Finish\n                    </Button>\n                </footer>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { Card, Button } from \"@material-ui/core\";\nimport \"./QRScan.sass\";\n\nexport default class QRScanner extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            delay: 50\n            // result: \"No result\"\n        };\n        this.handleScan = this.handleScan.bind(this);\n    }\n    handleScan(data) {\n        if (data) {\n            this.props.history.push(`/patient/${data}`);\n        }\n    }\n    handleError(err) {\n        console.error(err);\n    }\n    render() {\n        return (\n            <div className=\"qrscan\">\n                <h1>Check-in</h1>\n                <Card className=\"qrcard\">\n                    <QrReader\n                        delay={this.state.delay}\n                        onError={this.handleError}\n                        onScan={this.handleScan}\n                        style={{ width: \"100%\" }}\n                        resolution={600}\n                        facingMode={\"environment\"}\n                    />\n                </Card>\n                <footer>\n                    <Button\n                        href={`/profile/${this.props.match.params.patientID}`}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"large\"\n                        // onClick={this.handleNextStep}\n                    >\n                        Cancel\n                    </Button>\n                </footer>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\n\nimport Header from \"./components/Header/Header\";\nimport RoleSelection from \"./components/RoleSelection/RoleSelection\";\nimport UserVerification from \"./components/UserVerification/UserVerification\";\nimport Login from \"./components/Login/Login\";\nimport Form from \"./components/Form/Form\";\nimport Profile from \"./components/Profile/Profile\";\nimport PatientData from \"./components/PatientData/PatientData\";\nimport QRDisplay from \"./components/QRDisplay/QRDisplay\";\nimport QRScan from \"./components/QRScan/QRScan\";\nimport \"./App.sass\";\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div id=\"App\">\n                    <Header title=\"MediForm\" />\n                    <div id=\"content\">\n                        <Route path=\"/\" exact component={RoleSelection} />\n                        <Route path=\"/login\" component={Login} />\n                        <Route\n                            path=\"/userVerification\"\n                            component={UserVerification}\n                        />\n                        <Route\n                            path=\"/qrdisplay/:patientID\"\n                            component={QRDisplay}\n                        />\n                        <Route path=\"/qrscan\" component={QRScan} />\n                        <Route path=\"/form\" component={Form} />\n                        <Route path=\"/profile/:patientID\" component={Profile} />\n                        <Route\n                            path=\"/patient/:patientID\"\n                            component={PatientData}\n                        />\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}